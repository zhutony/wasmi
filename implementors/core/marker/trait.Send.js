(function() {var implementors = {};
implementors["instantiate"] = [{"text":"impl Send for ResolveAll","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl !Send for group","synthetic":true,"types":[]},{"text":"impl Send for utimbuf","synthetic":true,"types":[]},{"text":"impl Send for timeval","synthetic":true,"types":[]},{"text":"impl Send for timespec","synthetic":true,"types":[]},{"text":"impl Send for rlimit","synthetic":true,"types":[]},{"text":"impl Send for rusage","synthetic":true,"types":[]},{"text":"impl Send for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Send for hostent","synthetic":true,"types":[]},{"text":"impl !Send for iovec","synthetic":true,"types":[]},{"text":"impl Send for pollfd","synthetic":true,"types":[]},{"text":"impl Send for winsize","synthetic":true,"types":[]},{"text":"impl Send for linger","synthetic":true,"types":[]},{"text":"impl !Send for sigval","synthetic":true,"types":[]},{"text":"impl Send for itimerval","synthetic":true,"types":[]},{"text":"impl Send for tms","synthetic":true,"types":[]},{"text":"impl !Send for servent","synthetic":true,"types":[]},{"text":"impl !Send for protoent","synthetic":true,"types":[]},{"text":"impl Send for in_addr","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Send for sockaddr","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Send for addrinfo","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Send for fd_set","synthetic":true,"types":[]},{"text":"impl !Send for tm","synthetic":true,"types":[]},{"text":"impl Send for sched_param","synthetic":true,"types":[]},{"text":"impl !Send for Dl_info","synthetic":true,"types":[]},{"text":"impl !Send for lconv","synthetic":true,"types":[]},{"text":"impl Send for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Send for ifaddrs","synthetic":true,"types":[]},{"text":"impl Send for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Send for arpreq","synthetic":true,"types":[]},{"text":"impl Send for arpreq_old","synthetic":true,"types":[]},{"text":"impl Send for arphdr","synthetic":true,"types":[]},{"text":"impl !Send for mmsghdr","synthetic":true,"types":[]},{"text":"impl Send for epoll_event","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Send for utsname","synthetic":true,"types":[]},{"text":"impl !Send for sigevent","synthetic":true,"types":[]},{"text":"impl Send for rlimit64","synthetic":true,"types":[]},{"text":"impl !Send for glob_t","synthetic":true,"types":[]},{"text":"impl !Send for passwd","synthetic":true,"types":[]},{"text":"impl !Send for spwd","synthetic":true,"types":[]},{"text":"impl Send for dqblk","synthetic":true,"types":[]},{"text":"impl Send for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Send for itimerspec","synthetic":true,"types":[]},{"text":"impl Send for fsid_t","synthetic":true,"types":[]},{"text":"impl Send for packet_mreq","synthetic":true,"types":[]},{"text":"impl Send for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Send for if_nameindex","synthetic":true,"types":[]},{"text":"impl Send for msginfo","synthetic":true,"types":[]},{"text":"impl Send for sembuf","synthetic":true,"types":[]},{"text":"impl Send for input_event","synthetic":true,"types":[]},{"text":"impl Send for input_id","synthetic":true,"types":[]},{"text":"impl Send for input_absinfo","synthetic":true,"types":[]},{"text":"impl Send for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Send for input_mask","synthetic":true,"types":[]},{"text":"impl Send for ff_replay","synthetic":true,"types":[]},{"text":"impl Send for ff_trigger","synthetic":true,"types":[]},{"text":"impl Send for ff_envelope","synthetic":true,"types":[]},{"text":"impl Send for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Send for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_effect","synthetic":true,"types":[]},{"text":"impl !Send for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Send for ucred","synthetic":true,"types":[]},{"text":"impl !Send for mntent","synthetic":true,"types":[]},{"text":"impl !Send for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Send for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Send for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for arpd_request","synthetic":true,"types":[]},{"text":"impl Send for inotify_event","synthetic":true,"types":[]},{"text":"impl Send for fanotify_response","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Send for regmatch_t","synthetic":true,"types":[]},{"text":"impl Send for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Send for dirent","synthetic":true,"types":[]},{"text":"impl Send for dirent64","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Send for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Send for mq_attr","synthetic":true,"types":[]},{"text":"impl Send for statx","synthetic":true,"types":[]},{"text":"impl Send for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Send for aiocb","synthetic":true,"types":[]},{"text":"impl Send for __exit_status","synthetic":true,"types":[]},{"text":"impl Send for __timeval","synthetic":true,"types":[]},{"text":"impl !Send for glob64_t","synthetic":true,"types":[]},{"text":"impl !Send for msghdr","synthetic":true,"types":[]},{"text":"impl Send for cmsghdr","synthetic":true,"types":[]},{"text":"impl Send for termios","synthetic":true,"types":[]},{"text":"impl Send for mallinfo","synthetic":true,"types":[]},{"text":"impl Send for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Send for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Send for nlattr","synthetic":true,"types":[]},{"text":"impl !Send for rtentry","synthetic":true,"types":[]},{"text":"impl Send for timex","synthetic":true,"types":[]},{"text":"impl Send for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Send for regex_t","synthetic":true,"types":[]},{"text":"impl Send for utmpx","synthetic":true,"types":[]},{"text":"impl Send for sigset_t","synthetic":true,"types":[]},{"text":"impl Send for sysinfo","synthetic":true,"types":[]},{"text":"impl Send for msqid_ds","synthetic":true,"types":[]},{"text":"impl Send for sigaction","synthetic":true,"types":[]},{"text":"impl Send for statfs","synthetic":true,"types":[]},{"text":"impl Send for flock","synthetic":true,"types":[]},{"text":"impl Send for flock64","synthetic":true,"types":[]},{"text":"impl Send for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Send for stack_t","synthetic":true,"types":[]},{"text":"impl Send for stat","synthetic":true,"types":[]},{"text":"impl Send for stat64","synthetic":true,"types":[]},{"text":"impl Send for statfs64","synthetic":true,"types":[]},{"text":"impl Send for statvfs64","synthetic":true,"types":[]},{"text":"impl Send for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Send for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Send for user","synthetic":true,"types":[]},{"text":"impl !Send for mcontext_t","synthetic":true,"types":[]},{"text":"impl Send for ipc_perm","synthetic":true,"types":[]},{"text":"impl Send for shmid_ds","synthetic":true,"types":[]},{"text":"impl Send for termios2","synthetic":true,"types":[]},{"text":"impl Send for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Send for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Send for ucontext_t","synthetic":true,"types":[]},{"text":"impl Send for statvfs","synthetic":true,"types":[]},{"text":"impl Send for max_align_t","synthetic":true,"types":[]},{"text":"impl Send for sem_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Send for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Send for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Send for in6_addr","synthetic":true,"types":[]},{"text":"impl Send for DIR","synthetic":true,"types":[]},{"text":"impl Send for FILE","synthetic":true,"types":[]},{"text":"impl Send for fpos_t","synthetic":true,"types":[]},{"text":"impl Send for timezone","synthetic":true,"types":[]},{"text":"impl Send for fpos64_t","synthetic":true,"types":[]}];
implementors["memory_units"] = [{"text":"impl Send for Bytes","synthetic":true,"types":[]},{"text":"impl Send for Words","synthetic":true,"types":[]},{"text":"impl Send for Pages","synthetic":true,"types":[]},{"text":"impl Send for Words","synthetic":true,"types":[]},{"text":"impl Send for Pages","synthetic":true,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Send for ParseBigIntError","synthetic":true,"types":[]},{"text":"impl Send for BigUint","synthetic":true,"types":[]},{"text":"impl Send for BigInt","synthetic":true,"types":[]},{"text":"impl Send for Sign","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Send for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Send for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Send for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Send for FloatErrorKind","synthetic":true,"types":[]}];
implementors["parity_wasm"] = [{"text":"impl Send for Module","synthetic":true,"types":[]},{"text":"impl Send for FunctionSection","synthetic":true,"types":[]},{"text":"impl Send for CodeSection","synthetic":true,"types":[]},{"text":"impl Send for MemorySection","synthetic":true,"types":[]},{"text":"impl Send for DataSection","synthetic":true,"types":[]},{"text":"impl Send for ImportSection","synthetic":true,"types":[]},{"text":"impl Send for ExportSection","synthetic":true,"types":[]},{"text":"impl Send for GlobalSection","synthetic":true,"types":[]},{"text":"impl Send for TypeSection","synthetic":true,"types":[]},{"text":"impl Send for ElementSection","synthetic":true,"types":[]},{"text":"impl Send for TableSection","synthetic":true,"types":[]},{"text":"impl Send for CustomSection","synthetic":true,"types":[]},{"text":"impl Send for ImportEntry","synthetic":true,"types":[]},{"text":"impl Send for ResizableLimits","synthetic":true,"types":[]},{"text":"impl Send for MemoryType","synthetic":true,"types":[]},{"text":"impl Send for TableType","synthetic":true,"types":[]},{"text":"impl Send for GlobalType","synthetic":true,"types":[]},{"text":"impl Send for ExportEntry","synthetic":true,"types":[]},{"text":"impl Send for GlobalEntry","synthetic":true,"types":[]},{"text":"impl Send for VarUint32","synthetic":true,"types":[]},{"text":"impl Send for VarUint7","synthetic":true,"types":[]},{"text":"impl Send for Uint8","synthetic":true,"types":[]},{"text":"impl Send for VarUint1","synthetic":true,"types":[]},{"text":"impl Send for VarInt7","synthetic":true,"types":[]},{"text":"impl Send for Uint32","synthetic":true,"types":[]},{"text":"impl Send for VarInt32","synthetic":true,"types":[]},{"text":"impl Send for VarInt64","synthetic":true,"types":[]},{"text":"impl Send for Uint64","synthetic":true,"types":[]},{"text":"impl Send for VarUint64","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for CountedList&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Send for CountedWriter&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Send for CountedListWriter&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FunctionType","synthetic":true,"types":[]},{"text":"impl Send for Instructions","synthetic":true,"types":[]},{"text":"impl Send for InitExpr","synthetic":true,"types":[]},{"text":"impl Send for BrTableData","synthetic":true,"types":[]},{"text":"impl Send for Func","synthetic":true,"types":[]},{"text":"impl Send for FuncBody","synthetic":true,"types":[]},{"text":"impl Send for Local","synthetic":true,"types":[]},{"text":"impl Send for ElementSegment","synthetic":true,"types":[]},{"text":"impl Send for DataSegment","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IndexMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for NameSection","synthetic":true,"types":[]},{"text":"impl Send for ModuleNameSubsection","synthetic":true,"types":[]},{"text":"impl Send for FunctionNameSubsection","synthetic":true,"types":[]},{"text":"impl Send for LocalNameSubsection","synthetic":true,"types":[]},{"text":"impl Send for RelocSection","synthetic":true,"types":[]},{"text":"impl Send for Unparsed","synthetic":true,"types":[]},{"text":"impl Send for ImportCountType","synthetic":true,"types":[]},{"text":"impl Send for Section","synthetic":true,"types":[]},{"text":"impl Send for External","synthetic":true,"types":[]},{"text":"impl Send for Internal","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for ValueType","synthetic":true,"types":[]},{"text":"impl Send for BlockType","synthetic":true,"types":[]},{"text":"impl Send for TableElementType","synthetic":true,"types":[]},{"text":"impl Send for Instruction","synthetic":true,"types":[]},{"text":"impl Send for RelocationEntry","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for SignatureBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for SignaturesBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for FunctionBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for TypeRefBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for FuncBodyBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for DataSegmentBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for ExportBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for ExportInternalBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for GlobalBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for ImportBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Identity","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for MemoryBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for ModuleBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for TableBuilder&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TableDefinition","synthetic":true,"types":[]},{"text":"impl Send for TableEntryDefinition","synthetic":true,"types":[]}];
implementors["wasmi"] = [{"text":"impl Send for Trap","synthetic":true,"types":[]},{"text":"impl !Send for FuncInstance","synthetic":true,"types":[]},{"text":"impl&lt;'args&gt; !Send for FuncInvocation&lt;'args&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FuncRef","synthetic":true,"types":[]},{"text":"impl Send for GlobalInstance","synthetic":true,"types":[]},{"text":"impl !Send for GlobalRef","synthetic":true,"types":[]},{"text":"impl Send for NopExternals","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RuntimeArgs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryInstance","synthetic":true,"types":[]},{"text":"impl !Send for MemoryRef","synthetic":true,"types":[]},{"text":"impl !Send for ModuleInstance","synthetic":true,"types":[]},{"text":"impl !Send for ModuleRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for NotStartedModuleRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StackRecycler","synthetic":true,"types":[]},{"text":"impl !Send for TableInstance","synthetic":true,"types":[]},{"text":"impl !Send for TableRef","synthetic":true,"types":[]},{"text":"impl Send for GlobalDescriptor","synthetic":true,"types":[]},{"text":"impl Send for MemoryDescriptor","synthetic":true,"types":[]},{"text":"impl Send for Signature","synthetic":true,"types":[]},{"text":"impl Send for TableDescriptor","synthetic":true,"types":[]},{"text":"impl Send for Module","synthetic":true,"types":[]},{"text":"impl Send for TrapKind","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for ResumableError","synthetic":true,"types":[]},{"text":"impl !Send for ExternVal","synthetic":true,"types":[]},{"text":"impl Send for ValueType","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for RuntimeValue","synthetic":true,"types":[]},{"text":"impl Send for F32","synthetic":true,"types":[]},{"text":"impl Send for F64","synthetic":true,"types":[]}];
implementors["wasmi_validation"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for PlainValidator","synthetic":true,"types":[]},{"text":"impl Send for PlainFuncValidator","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for StackWithLimit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ModuleContext","synthetic":true,"types":[]},{"text":"impl Send for ModuleContextBuilder","synthetic":true,"types":[]},{"text":"impl Send for BlockFrame","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FunctionValidationContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for StartedWith","synthetic":true,"types":[]},{"text":"impl Send for StackValueType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Locals&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()